;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name prod.core, :imports nil, :requires {hp hodgepodge.core, persistence frontend.persistence-middleware, frontend.persistence-middleware frontend.persistence-middleware, hodgepodge.core hodgepodge.core, routing frontend.routing, frontend.devtools frontend.devtools, reagent.core reagent.core, r reagent.core, todos frontend.todos, frontend.todos frontend.todos, frontend.ui frontend.ui, devtools frontend.devtools, frontend.routing frontend.routing, ui frontend.ui}, :uses nil, :defs {main {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/prod/core.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([]))}, :name prod.core/main, :variadic false, :file "src/prod/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, app {:name prod.core/app, :file "src/prod/core.cljs", :line 35, :column 1, :end-line 35, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/prod/core.cljs", :line 35, :column 6, :end-line 35, :end-column 9}}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/prod/core.cljs", :line 38, :column 7, :end-line 38, :end-column 19, :arglists (quote ([]))}, :name prod.core/on-js-reload, :variadic false, :file "src/prod/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:devtools :view :model}, :order [:model :devtools :view]}, :doc nil}