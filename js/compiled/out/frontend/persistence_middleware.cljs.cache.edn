;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.persistence-middleware, :imports nil, :requires {cljs.core.match cljs.core.match}, :uses nil, :defs {wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/persistence-middleware.cljs", :line 6, :column 7, :end-line 6, :end-column 19, :arglists (quote ([control storage key]))}, :name frontend.persistence-middleware/wrap-control, :variadic false, :file "src/frontend/persistence-middleware.cljs", :end-column 19, :method-params ([control storage key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 3, :fn-var true, :arglists (quote ([control storage key]))}, wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/persistence-middleware.cljs", :line 17, :column 7, :end-line 17, :end-column 21, :arglists (quote ([reconcile storage key]))}, :name frontend.persistence-middleware/wrap-reconcile, :variadic false, :file "src/frontend/persistence-middleware.cljs", :end-column 21, :method-params ([reconcile storage key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 3, :fn-var true, :arglists (quote ([reconcile storage key]))}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :else :not-found :reset-from-storage}, :order [:on-connect :not-found :reset-from-storage :else]}, :doc nil}