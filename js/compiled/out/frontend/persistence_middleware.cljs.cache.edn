;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.persistence-middleware, :imports nil, :requires {cljs.core.match cljs.core.match}, :uses nil, :defs {-wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/persistence_middleware.cljs", :line 7, :column 7, :end-line 7, :end-column 20, :arglists (quote ([component-control storage key blacklist]))}, :name frontend.persistence-middleware/-wrap-control, :variadic false, :file "src/frontend/persistence_middleware.cljs", :end-column 20, :method-params ([component-control storage key blacklist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 4, :fn-var true, :arglists (quote ([component-control storage key blacklist]))}, -wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/persistence_middleware.cljs", :line 41, :column 7, :end-line 41, :end-column 22, :arglists (quote ([component-reconcile]))}, :name frontend.persistence-middleware/-wrap-reconcile, :variadic false, :file "src/frontend/persistence_middleware.cljs", :end-column 22, :method-params ([component-reconcile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-reconcile]))}, wrap {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/persistence_middleware.cljs", :line 52, :column 7, :end-line 52, :end-column 11, :arglists (quote ([spec storage key blacklist])), :doc "On :on-connect signal middleware will load the model from storage and send the signal further with updated model to the component.\n  Blacklist should contain model keys which will not be saved and loaded."}, :name frontend.persistence-middleware/wrap, :variadic false, :file "src/frontend/persistence_middleware.cljs", :end-column 11, :method-params ([spec storage key blacklist]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 4, :fn-var true, :arglists (quote ([spec storage key blacklist])), :doc "On :on-connect signal middleware will load the model from storage and send the signal further with updated model to the component.\n  Blacklist should contain model keys which will not be saved and loaded."}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :else :not-found :control :reconcile :frontend.persistence-middleware/-reset-from-storage}, :order [:on-connect :not-found :frontend.persistence-middleware/-reset-from-storage :else :control :reconcile]}, :doc nil}