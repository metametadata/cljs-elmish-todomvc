;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.routing, :imports {Html5History goog.history.Html5History}, :requires {ui frontend.ui, frontend.ui frontend.ui, cljs.core.match cljs.core.match, r reagent.core, reagent.core reagent.core, goog.events goog.events, EventType goog.history.EventType, goog.history.EventType goog.history.EventType, Html5History goog.history.Html5History}, :uses nil, :defs {-wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 94, :column 7, :end-line 94, :end-column 22, :arglists (quote ([component-reconcile])), :doc "Updates the token."}, :name frontend.routing/-wrap-reconcile, :variadic false, :file "src/frontend/routing.cljs", :end-column 22, :method-params ([component-reconcile]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-reconcile])), :doc "Updates the token."}, replace-token {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 13, :column 4, :end-line 13, :end-column 17, :protocol frontend.routing/HistoryProtocol, :doc nil, :arglists (quote ([this token]))}, :protocol frontend.routing/HistoryProtocol, :name frontend.routing/replace-token, :variadic false, :file "src/frontend/routing.cljs", :end-column 17, :method-params ([this token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 13, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this token])), :doc nil}, -wrap-view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 72, :column 7, :end-line 72, :end-column 17, :arglists (quote ([component-view history])), :doc "Adds url bar updater."}, :name frontend.routing/-wrap-view, :variadic false, :file "src/frontend/routing.cljs", :end-column 17, :method-params ([component-view history]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 2, :fn-var true, :arglists (quote ([component-view history])), :doc "Adds url bar updater."}, -wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 81, :column 7, :end-line 81, :end-column 20, :arglists (quote ([component-control])), :doc "Updates token in model on navigation signal and lets wrapped component handle the signal."}, :name frontend.routing/-wrap-control, :variadic false, :file "src/frontend/routing.cljs", :end-column 20, :method-params ([component-control]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-control])), :doc "Updates token in model on navigation signal and lets wrapped component handle the signal."}, wrap {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 106, :column 7, :end-line 106, :end-column 11, :arglists (quote ([spec history])), :doc "Middleware catches [::on-navigate <token>] signal, updates ::token in model and dispatches signal further to the component.\n  ::on-navigate handler must be idempotent, because it's not guaranteed that signal's token is different from the previous one.\n  In order to start sending signals invoke start-signaling after component is connected.\n  Keeps browser url bar in sync with ::token key in model."}, :name frontend.routing/wrap, :variadic false, :file "src/frontend/routing.cljs", :end-column 11, :method-params ([spec history]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 2, :fn-var true, :arglists (quote ([spec history])), :doc "Middleware catches [::on-navigate <token>] signal, updates ::token in model and dispatches signal further to the component.\n  ::on-navigate handler must be idempotent, because it's not guaranteed that signal's token is different from the previous one.\n  In order to start sending signals invoke start-signaling after component is connected.\n  Keeps browser url bar in sync with ::token key in model."}, _goog-history {:name frontend.routing/_goog-history, :file "src/frontend/routing.cljs", :line 16, :column 1, :end-line 16, :end-column 23, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 16, :column 10, :end-line 16, :end-column 23}}, start-signaling {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 11, :column 4, :end-line 11, :end-column 19, :protocol frontend.routing/HistoryProtocol, :doc nil, :arglists (quote ([this app]))}, :protocol frontend.routing/HistoryProtocol, :name frontend.routing/start-signaling, :variadic false, :file "src/frontend/routing.cljs", :end-column 19, :method-params ([this app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists (quote ([this app])), :doc nil}, ->History {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 21, :column 12, :end-line 21, :end-column 19, :internal-ctor true, :factory :positional, :arglists (quote ([]))}, :name frontend.routing/->History, :variadic false, :file "src/frontend/routing.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, *_history-events-enabled?* {:name frontend.routing/*_history-events-enabled?*, :file "src/frontend/routing.cljs", :line 19, :column 1, :end-line 19, :end-column 42, :dynamic true, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 19, :column 16, :end-line 19, :end-column 42, :dynamic true}}, History {:num-fields 0, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted frontend.routing/HistoryProtocol cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name frontend.routing/History, :file "src/frontend/routing.cljs", :end-column 19, :type true, :column 12, :internal-ctor true, :line 21, :record true, :end-line 21, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, HistoryProtocol {:meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 10, :column 14, :end-line 10, :end-column 29, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {start-signaling [[this app]], token [[this]], replace-token [[this token]]}}}, :protocol-symbol true, :name frontend.routing/HistoryProtocol, :file "src/frontend/routing.cljs", :end-column 29, :column 1, :line 10, :protocol-info {:methods {start-signaling [[this app]], token [[this]], replace-token [[this token]]}}, :info nil, :end-line 10, :impls #{frontend.routing/History}, :doc nil, :jsdoc ("@interface")}, map->History {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 21, :column 12, :end-line 21, :end-column 19, :internal-ctor true, :factory :map, :arglists (quote ([G__23957]))}, :name frontend.routing/map->History, :variadic false, :file "src/frontend/routing.cljs", :end-column 19, :method-params ([G__23957]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23957]))}, -url-bar {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 63, :column 7, :end-line 63, :end-column 15, :arglists (quote ([history token])), :doc "Invisible view which updates browser's bar on model changes."}, :name frontend.routing/-url-bar, :variadic false, :file "src/frontend/routing.cljs", :end-column 15, :method-params ([history token]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history token])), :doc "Invisible view which updates browser's bar on model changes."}, token {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 12, :column 4, :end-line 12, :end-column 9, :protocol frontend.routing/HistoryProtocol, :doc nil, :arglists (quote ([this]))}, :protocol frontend.routing/HistoryProtocol, :name frontend.routing/token, :variadic false, :file "src/frontend/routing.cljs", :end-column 9, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, -wrap-init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 47, :column 7, :end-line 47, :end-column 17, :arglists (quote ([component-init])), :doc "Sets initial token."}, :name frontend.routing/-wrap-init, :variadic false, :file "src/frontend/routing.cljs", :end-column 17, :method-params ([component-init]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-init])), :doc "Sets initial token."}, -wrap-view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/routing.cljs", :line 55, :column 7, :end-line 55, :end-column 23, :arglists (quote ([component-view-model])), :doc "Adds reaction to token."}, :name frontend.routing/-wrap-view-model, :variadic false, :file "src/frontend/routing.cljs", :end-column 23, :method-params ([component-view-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 1, :fn-var true, :arglists (quote ([component-view-model])), :doc "Adds reaction to token."}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:init :else :frontend.routing/-set-token :component-did-mount :component-will-update :frontend.routing/on-navigate :dispatch-signal :frontend.routing/token :div :reagent-render :control :view-model :display-name :reconcile :view :span}, :order [:dispatch-signal :frontend.routing/on-navigate :frontend.routing/token :display-name :reagent-render :component-did-mount :component-will-update :span :div :else :frontend.routing/-set-token :init :view-model :view :control :reconcile]}, :doc nil}