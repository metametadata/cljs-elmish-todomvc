;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.devtools, :imports nil, :requires {r reagent.core, reagent.core reagent.core, cljs.pprint cljs.pprint, cljs.core.match cljs.core.match}, :uses nil, :defs {init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 12, :column 7, :end-line 12, :end-column 11, :arglists (quote ([])), :doc "Creates a fresh dev-model instance."}, :name frontend.devtools/init, :variadic false, :file "src/frontend/devtools.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates a fresh dev-model instance."}, -signal-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 20, :column 7, :end-line 20, :end-column 20, :arglists (quote ([signal]))}, :name frontend.devtools/-signal-event, :variadic false, :file "src/frontend/devtools.cljs", :end-column 20, :method-params ([signal]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([signal]))}, -action-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([source-signal-id action]))}, :name frontend.devtools/-action-event, :variadic false, :file "src/frontend/devtools.cljs", :end-column 20, :method-params ([source-signal-id action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source-signal-id action]))}, -devtools-view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 28, :column 7, :end-line 28, :end-column 21, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/-devtools-view, :variadic false, :file "src/frontend/devtools.cljs", :end-column 21, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom."}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 58, :column 7, :end-line 58, :end-column 11, :arglists (quote ([dev-model app])), :doc "Renders app view with devtools. dev-model must be a ratom."}, :name frontend.devtools/view, :variadic false, :file "src/frontend/devtools.cljs", :end-column 11, :method-params ([dev-model app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev-model app])), :doc "Renders app view with devtools. dev-model must be a ratom."}, wrap-dispatch-action {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 74, :column 7, :end-line 74, :end-column 27, :arglists (quote ([dispatch-action source-signal-id])), :doc "Attaches signal source to action."}, :name frontend.devtools/wrap-dispatch-action, :variadic false, :file "src/frontend/devtools.cljs", :end-column 27, :method-params ([dispatch-action source-signal-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dispatch-action source-signal-id])), :doc "Attaches signal source to action."}, wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 82, :column 7, :end-line 82, :end-column 19, :arglists (quote ([control dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/wrap-control, :variadic false, :file "src/frontend/devtools.cljs", :end-column 19, :method-params ([control dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 82, :end-line 82, :max-fixed-arity 2, :fn-var true, :arglists (quote ([control dev-model])), :doc "dev-model must be a ratom."}, wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 92, :column 7, :end-line 92, :end-column 21, :arglists (quote ([reconcile dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/wrap-reconcile, :variadic false, :file "src/frontend/devtools.cljs", :end-column 21, :method-params ([reconcile dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconcile dev-model])), :doc "dev-model must be a ratom."}}, :require-macros {cljs.pprint cljs.pprint, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:box-shadow :source-signal-id :color :key :bottom :else :top :strong :-unknown-signal :margin-left :section :background-color :width :actions :style :div :z-index :padding-left :clojure.core.match/not-found :right :position :action :div>strong :overflow-y :header>h3 :signals :view :height :span}, :order [:signals :actions :section :style :width :height :overflow-y :background-color :padding-left :color :header>h3 :div :span :strong :margin-left :div>strong :key :view :position :right :top :bottom :z-index :box-shadow :source-signal-id :action :-unknown-signal :else :clojure.core.match/not-found]}, :doc nil}