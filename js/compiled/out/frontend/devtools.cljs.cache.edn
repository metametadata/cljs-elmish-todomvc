;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.devtools, :imports nil, :requires {r reagent.core, reagent.core reagent.core, cljs.pprint cljs.pprint, cljs.core.match cljs.core.match, s com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses nil, :defs {-signal-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 24, :column 7, :end-line 24, :end-column 20, :arglists (quote ([signal]))}, :name frontend.devtools/-signal-event, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 20, :method-params ([signal]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([signal]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 115, :column 7, :end-line 115, :end-column 11, :arglists (quote ([dev-model app])), :doc "Renders app view with devtools. dev-model must be a ratom."}, :name frontend.devtools/view, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 11, :method-params ([dev-model app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev-model app])), :doc "Renders app view with devtools. dev-model must be a ratom."}, wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 138, :column 7, :end-line 138, :end-column 19, :arglists (quote ([control dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/wrap-control, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 19, :method-params ([control dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 138, :end-line 138, :max-fixed-arity 2, :fn-var true, :arglists (quote ([control dev-model])), :doc "dev-model must be a ratom."}, wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 152, :column 7, :end-line 152, :end-column 21, :arglists (quote ([reconcile dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/wrap-reconcile, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :method-params ([reconcile dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 152, :end-line 152, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconcile dev-model])), :doc "dev-model must be a ratom."}, -update-actions* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 40, :column 7, :end-line 40, :end-column 23, :arglists (quote ([model pred f & args])), :doc "model must be immutable.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}}, :name frontend.devtools/-update-actions*, :variadic true, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}, :method-params [(model pred f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 3, :fn-var true, :arglists ([model pred f & args]), :doc "model must be immutable."}, -action-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 28, :column 7, :end-line 28, :end-column 20, :arglists (quote ([source-signal-id action]))}, :name frontend.devtools/-action-event, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 20, :method-params ([source-signal-id action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source-signal-id action]))}, -is-action-event? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 35, :column 7, :end-line 35, :end-column 24, :arglists (quote ([x]))}, :name frontend.devtools/-is-action-event?, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 13, :column 7, :end-line 13, :end-column 11, :arglists (quote ([])), :doc "Creates a fresh dev-model instance."}, :name frontend.devtools/init, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates a fresh dev-model instance."}, -replay {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 57, :column 7, :end-line 57, :end-column 14, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Replays all the enabled actions from the initial model."}, :name frontend.devtools/-replay, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 14, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Replays all the enabled actions from the initial model."}, -reset-model-to-initial-state {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 52, :column 7, :end-line 52, :end-column 36, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Sends special devtools action understood by wrapped reconciler."}, :name frontend.devtools/-reset-model-to-initial-state, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 36, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Sends special devtools action understood by wrapped reconciler."}, -toggle-action {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 69, :column 7, :end-line 69, :end-column 21, :arglists (quote ([dev-model id])), :doc "dev-model is a ratom."}, :name frontend.devtools/-toggle-action, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :method-params ([dev-model id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev-model id])), :doc "dev-model is a ratom."}, wrap-dispatch-action-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 131, :column 7, :end-line 131, :end-column 33, :arglists (quote ([dispatch-action source-signal-id])), :doc "Will wrap dispatched actions into action events."}, :name frontend.devtools/wrap-dispatch-action-event, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 33, :method-params ([dispatch-action source-signal-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 131, :end-line 131, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dispatch-action source-signal-id])), :doc "Will wrap dispatched actions into action events."}, -update-action {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 47, :column 7, :end-line 47, :end-column 21, :arglists (quote ([model id f & args])), :doc "model must be immutable.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}}, :name frontend.devtools/-update-action, :variadic true, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}, :method-params [(model id f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists ([model id f & args]), :doc "model must be immutable."}, -devtools-view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 75, :column 7, :end-line 75, :end-column 21, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/-devtools-view, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom."}}, :require-macros {cljs.pprint cljs.pprint, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:hr :box-shadow :source-signal-id :color :key :bottom :dispatch-action :initial-model :top :strong :-unknown-signal :margin-left :section :background-color :width :cursor :header :actions :on-click :title :enabled? :style :div :z-index :padding-left :id :-reset-model :right :initial-model-saved? :position :action :overflow-y :signals :view :height :span}, :order [:dispatch-action :initial-model :initial-model-saved? :signals :actions :id :source-signal-id :enabled? :action :-reset-model :section :style :width :height :overflow-y :background-color :padding-left :color :header :div :title :span :strong :on-click :cursor :margin-left :key :hr :view :position :right :top :bottom :z-index :box-shadow :-unknown-signal]}, :doc nil}