;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.devtools, :imports nil, :requires {r reagent.core, reagent.core reagent.core, cljs.pprint cljs.pprint, cljs.core.match cljs.core.match, s com.rpl.specter, com.rpl.specter com.rpl.specter}, :uses nil, :defs {-signal-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 25, :column 7, :end-line 25, :end-column 20, :arglists (quote ([signal]))}, :name frontend.devtools/-signal-event, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 20, :method-params ([signal]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([signal]))}, -sweep {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 81, :column 7, :end-line 81, :end-column 13, :arglists (quote ([dev-model]))}, :name frontend.devtools/-sweep, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 13, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 141, :column 7, :end-line 141, :end-column 11, :arglists (quote ([dev-model app])), :doc "Renders app view with devtools. dev-model must be a ratom."}, :name frontend.devtools/view, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 11, :method-params ([dev-model app]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 141, :end-line 141, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev-model app])), :doc "Renders app view with devtools. dev-model must be a ratom."}, wrap-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 164, :column 7, :end-line 164, :end-column 19, :arglists (quote ([control dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/wrap-control, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 19, :method-params ([control dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 2, :fn-var true, :arglists (quote ([control dev-model])), :doc "dev-model must be a ratom."}, wrap-reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 179, :column 7, :end-line 179, :end-column 21, :arglists (quote ([reconcile dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/wrap-reconcile, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :method-params ([reconcile dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 179, :end-line 179, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconcile dev-model])), :doc "dev-model must be a ratom."}, -update-actions* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 41, :column 7, :end-line 41, :end-column 23, :arglists (quote ([model pred f & args])), :doc "model must be immutable.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}}, :name frontend.devtools/-update-actions*, :variadic true, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}, :method-params [(model pred f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 3, :fn-var true, :arglists ([model pred f & args]), :doc "model must be immutable."}, -action-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 29, :column 7, :end-line 29, :end-column 20, :arglists (quote ([source-signal-id action]))}, :name frontend.devtools/-action-event, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 20, :method-params ([source-signal-id action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 2, :fn-var true, :arglists (quote ([source-signal-id action]))}, -is-action-event? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 36, :column 7, :end-line 36, :end-column 24, :arglists (quote ([x]))}, :name frontend.devtools/-is-action-event?, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 24, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, -orphaned-signal? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 76, :column 7, :end-line 76, :end-column 24, :arglists (quote ([dev-model [signal-id _ :as _signal_]]))}, :name frontend.devtools/-orphaned-signal?, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 24, :method-params ([dev-model p__33971]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 76, :end-line 76, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev-model [signal-id _ :as _signal_]]))}, init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 14, :column 7, :end-line 14, :end-column 11, :arglists (quote ([])), :doc "Creates a fresh dev-model instance."}, :name frontend.devtools/init, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Creates a fresh dev-model instance."}, -replay {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 58, :column 7, :end-line 58, :end-column 14, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Replays all the enabled actions from the initial model."}, :name frontend.devtools/-replay, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 14, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 58, :end-line 58, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Replays all the enabled actions from the initial model."}, -reset-model-to-initial-state {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 53, :column 7, :end-line 53, :end-column 36, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Sends special devtools action understood by wrapped reconciler."}, :name frontend.devtools/-reset-model-to-initial-state, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 36, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom. Sends special devtools action understood by wrapped reconciler."}, -toggle-action {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 70, :column 7, :end-line 70, :end-column 21, :arglists (quote ([dev-model id])), :doc "dev-model is a ratom."}, :name frontend.devtools/-toggle-action, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :method-params ([dev-model id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 70, :end-line 70, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dev-model id])), :doc "dev-model is a ratom."}, wrap-dispatch-action-event {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 157, :column 7, :end-line 157, :end-column 33, :arglists (quote ([dispatch-action source-signal-id])), :doc "Will wrap dispatched actions into action events."}, :name frontend.devtools/wrap-dispatch-action-event, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 33, :method-params ([dispatch-action source-signal-id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 2, :fn-var true, :arglists (quote ([dispatch-action source-signal-id])), :doc "Will wrap dispatched actions into action events."}, -update-action {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 48, :column 7, :end-line 48, :end-column 21, :arglists (quote ([model id f & args])), :doc "model must be immutable.", :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}}, :name frontend.devtools/-update-action, :variadic true, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}, :method-params [(model id f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 3, :fn-var true, :arglists ([model id f & args]), :doc "model must be immutable."}, -devtools-view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :line 90, :column 7, :end-line 90, :end-column 21, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom."}, :name frontend.devtools/-devtools-view, :variadic false, :file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/devtools.cljs", :end-column 21, :method-params ([dev-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists (quote ([dev-model])), :doc "dev-model must be a ratom."}}, :require-macros {cljs.pprint cljs.pprint, cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:hr :box-shadow :border-bottom-style :source-signal-id :color :text-align :key :bottom :dispatch-action :initial-model :button :top :font-weight :strong :-unknown-signal :margin-left :background-color :width :cursor :actions :on-click :border-bottom-width :title :enabled? :style :div :z-index :padding-left :id :padding :-reset-model :right :initial-model-saved? :border-color :position :action :overflow-y :border-radius :signals :view :height :span :margin}, :order [:dispatch-action :initial-model :initial-model-saved? :signals :actions :id :source-signal-id :enabled? :action :-reset-model :div :style :width :height :overflow-y :background-color :padding-left :color :text-align :border-bottom-width :border-bottom-style :border-color :button :title :on-click :font-weight :cursor :padding :margin :border-radius :span :strong :margin-left :key :hr :view :position :right :top :bottom :z-index :box-shadow :-unknown-signal]}, :doc nil}