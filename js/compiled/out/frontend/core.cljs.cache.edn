;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.core, :imports {Html5History goog.history.Html5History}, :requires {com.rpl.specter com.rpl.specter, hp hodgepodge.core, Html5History goog.history.Html5History, hodgepodge.core hodgepodge.core, EventType goog.history.EventType, reagent.core reagent.core, r reagent.core, goog.history.EventType goog.history.EventType, frontend.ui frontend.ui, s com.rpl.specter, ui frontend.ui, cljs.core.match cljs.core.match, goog.events goog.events}, :uses nil, :defs {reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 100, :column 7, :end-line 100, :end-column 16, :arglists (quote ([model action]))}, :name frontend.core/reconcile, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 100, :end-line 100, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action]))}, main {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 282, :column 7, :end-line 282, :end-column 11, :arglists (quote ([]))}, :name frontend.core/main, :variadic false, :file "src/frontend/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 282, :end-line 282, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, enter-key? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 178, :column 7, :end-line 178, :end-column 17, :arglists (quote ([e]))}, :name frontend.core/enter-key?, :variadic false, :file "src/frontend/core.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, on-navigate {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 65, :column 7, :end-line 65, :end-column 18, :arglists (quote ([token dispatch]))}, :name frontend.core/on-navigate, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([token dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 2, :fn-var true, :arglists (quote ([token dispatch]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 255, :column 7, :end-line 255, :end-column 11, :arglists (quote ([{:keys [field todos has-todos? active-count has-completed-todos? all-completed? visibility], :as _view-model_} dispatch]))}, :name frontend.core/view, :variadic false, :file "src/frontend/core.cljs", :end-column 11, :method-params ([p__29025 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 255, :end-line 255, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [field todos has-todos? active-count has-completed-todos? all-completed? visibility], :as _view-model_} dispatch]))}, visibility-spec {:name frontend.core/visibility-spec, :file "src/frontend/core.cljs", :line 60, :column 1, :end-line 60, :end-column 21, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 60, :column 6, :end-line 60, :end-column 21}}, model {:name frontend.core/model, :file "src/frontend/core.cljs", :line 280, :column 1, :end-line 280, :end-column 15, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 280, :column 10, :end-line 280, :end-column 15}}, update-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 37, :column 7, :end-line 37, :end-column 18, :arglists (quote ([model id f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}}, :name frontend.core/update-todo, :variadic true, :file "src/frontend/core.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}, :method-params [(model id f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 3, :fn-var true, :arglists ([model id f & args])}, view-header {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 186, :column 7, :end-line 186, :end-column 18, :arglists (quote ([field dispatch]))}, :name frontend.core/view-header, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([field dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 186, :end-line 186, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field dispatch]))}, wrap-persist-to-storage {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 267, :column 7, :end-line 267, :end-column 30, :arglists (quote ([reconcile storage]))}, :name frontend.core/wrap-persist-to-storage, :variadic false, :file "src/frontend/core.cljs", :end-column 30, :method-params ([reconcile storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 267, :end-line 267, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconcile storage]))}, view-todo-input {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 195, :column 7, :end-line 195, :end-column 22, :arglists (quote ([_id_ _title_ _editing?_ _dispatch_])), :doc "Note that |editing?| is passed only to trigger :component-did-update to set focus on the state change."}, :name frontend.core/view-todo-input, :variadic false, :file "src/frontend/core.cljs", :end-column 22, :method-params ([_id_ _title_ _editing?_ _dispatch_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 195, :end-line 195, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_id_ _title_ _editing?_ _dispatch_])), :doc "Note that |editing?| is passed only to trigger :component-did-update to set focus on the state change."}, init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 22, :column 7, :end-line 22, :end-column 11, :arglists (quote ([]))}, :name frontend.core/init, :variadic false, :file "src/frontend/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, new-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 74, :column 7, :end-line 74, :end-column 18, :arglists (quote ([history storage]))}, :name frontend.core/new-control, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([history storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 2, :fn-var true, :arglists (quote ([history storage]))}, remove-todos {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 51, :column 7, :end-line 51, :end-column 19, :arglists (quote ([model pred]))}, :name frontend.core/remove-todos, :variadic false, :file "src/frontend/core.cljs", :end-column 19, :method-params ([model pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model pred]))}, update-todos* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 31, :column 7, :end-line 31, :end-column 20, :arglists (quote ([model pred f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}}, :name frontend.core/update-todos*, :variadic true, :file "src/frontend/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}, :method-params [(model pred f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 3, :fn-var true, :arglists ([model pred f & args])}, history {:name frontend.core/history, :file "src/frontend/core.cljs", :line 277, :column 1, :end-line 277, :end-column 17, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 277, :column 10, :end-line 277, :end-column 17}}, remove-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 55, :column 7, :end-line 55, :end-column 18, :arglists (quote ([model id]))}, :name frontend.core/remove-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([model id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model id]))}, init-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 14, :column 7, :end-line 14, :end-column 16, :arglists (quote ([id title]))}, :name frontend.core/init-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([id title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id title]))}, find-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 45, :column 7, :end-line 45, :end-column 16, :arglists (quote ([model id]))}, :name frontend.core/find-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([model id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 45, :end-line 45, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model id]))}, escape-key? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 182, :column 7, :end-line 182, :end-column 18, :arglists (quote ([e]))}, :name frontend.core/escape-key?, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, view-footer {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 237, :column 7, :end-line 237, :end-column 18, :arglists (quote ([active-count has-completed-todos? visibility dispatch]))}, :name frontend.core/view-footer, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([active-count has-completed-todos? visibility dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 237, :end-line 237, :max-fixed-arity 4, :fn-var true, :arglists (quote ([active-count has-completed-todos? visibility dispatch]))}, app {:name frontend.core/app, :file "src/frontend/core.cljs", :line 301, :column 1, :end-line 301, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 301, :column 6, :end-line 301, :end-column 9}}, view-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 210, :column 7, :end-line 210, :end-column 16, :arglists (quote ([{:keys [id title editing? completed?], :as _todo_} dispatch]))}, :name frontend.core/view-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([p__28986 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id title editing? completed?], :as _todo_} dispatch]))}, view-todo-list {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 224, :column 7, :end-line 224, :end-column 21, :arglists (quote ([todos all-completed? dispatch]))}, :name frontend.core/view-todo-list, :variadic false, :file "src/frontend/core.cljs", :end-column 21, :method-params ([todos all-completed? dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 224, :end-line 224, :max-fixed-arity 3, :fn-var true, :arglists (quote ([todos all-completed? dispatch]))}, view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 159, :column 7, :end-line 159, :end-column 17, :arglists (quote ([model]))}, :name frontend.core/view-model, :variadic false, :file "src/frontend/core.cljs", :end-column 17, :method-params ([model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 159, :end-line 159, :max-fixed-arity 1, :fn-var true, :arglists (quote ([model]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 304, :column 7, :end-line 304, :end-column 19, :arglists (quote ([]))}, :name frontend.core/on-js-reload, :variadic false, :file "src/frontend/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 304, :end-line 304, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-todos {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 41, :column 7, :end-line 41, :end-column 19, :arglists (quote ([model f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}}, :name frontend.core/update-todos, :variadic true, :file "src/frontend/core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}, :method-params [(model f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 2, :fn-var true, :arglists ([model f & args])}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :all-completed? :editing? :load :button.clear-completed :header.header :completed? :section.todoapp :remove :todos :section.main :toggle-all :key :placeholder :else :cancel-editing :next-id :set-visibility :strong :completed :li :input.edit :value :stop-editing :input.toggle :on-toggle :span.todo-count :on-blur :component-did-update :field :type :input.new-todo :ul.filters :all :toggle :on-click :title :div.view :div :on-stop-editing :has-todos? :token :on-start-editing :input.toggle-all :clear-completed :has-completed-todos? :for :on-update-todo :on-update-field :update-field :reagent-render :original-title :active :on-double-click :label :id :class :checked :start-editing :on-add :on-toggle-all :button.destroy :on-cancel-editing :h1 :add :on-change :on-key-down :on-clear-completed :ul.todo-list :active-count :footer.footer :on-remove :visibility :href :a :view :update-todo :model}, :order [:id :title :completed? :original-title :editing? :field :visibility :todos :next-id :all :key :href :token :active :completed :set-visibility :else :on-clear-completed :clear-completed :on-remove :remove :on-update-todo :update-todo :on-cancel-editing :cancel-editing :on-stop-editing :stop-editing :on-start-editing :start-editing :on-toggle-all :toggle-all :on-toggle :toggle :on-add :add :on-update-field :update-field :on-connect :load :model :has-todos? :active-count :has-completed-todos? :all-completed? :header.header :h1 :input.new-todo :placeholder :value :on-change :on-key-down :reagent-render :component-did-update :input.edit :on-blur :li :class :div.view :input.toggle :type :checked :label :on-double-click :button.destroy :on-click :section.main :input.toggle-all :for :ul.todo-list :footer.footer :span.todo-count :strong :ul.filters :a :button.clear-completed :section.todoapp :div :view]}, :doc nil}