;; Analyzed by ClojureScript 1.7.170
{:use-macros {match cljs.core.match}, :excludes #{}, :name frontend.core, :imports {Html5History goog.history.Html5History}, :requires {com.rpl.specter com.rpl.specter, hp hodgepodge.core, Html5History goog.history.Html5History, hodgepodge.core hodgepodge.core, frontend.devtools frontend.devtools, EventType goog.history.EventType, reagent.core reagent.core, r reagent.core, goog.history.EventType goog.history.EventType, frontend.ui frontend.ui, devtools frontend.devtools, s com.rpl.specter, ui frontend.ui, cljs.core.match cljs.core.match, goog.events goog.events}, :uses nil, :defs {dev-model {:name frontend.core/dev-model, :file "src/frontend/core.cljs", :line 282, :column 1, :end-line 282, :end-column 15, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 282, :column 6, :end-line 282, :end-column 15}}, reconcile {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 96, :column 7, :end-line 96, :end-column 16, :arglists (quote ([model action]))}, :name frontend.core/reconcile, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([model action]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model action]))}, main {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 284, :column 7, :end-line 284, :end-column 11, :arglists (quote ([]))}, :name frontend.core/main, :variadic false, :file "src/frontend/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 284, :end-line 284, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, enter-key? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 174, :column 7, :end-line 174, :end-column 17, :arglists (quote ([e]))}, :name frontend.core/enter-key?, :variadic false, :file "src/frontend/core.cljs", :end-column 17, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 174, :end-line 174, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, view {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 256, :column 7, :end-line 256, :end-column 11, :arglists (quote ([{:keys [field todos has-todos? active-count has-completed-todos? all-completed? visibility], :as _view-model_} dispatch]))}, :name frontend.core/view, :variadic false, :file "src/frontend/core.cljs", :end-column 11, :method-params ([p__45257 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 256, :end-line 256, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [field todos has-todos? active-count has-completed-todos? all-completed? visibility], :as _view-model_} dispatch]))}, visibility-spec {:name frontend.core/visibility-spec, :file "src/frontend/core.cljs", :line 61, :column 1, :end-line 61, :end-column 21, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 61, :column 6, :end-line 61, :end-column 21}}, model {:name frontend.core/model, :file "src/frontend/core.cljs", :line 281, :column 1, :end-line 281, :end-column 15, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 281, :column 10, :end-line 281, :end-column 15}}, update-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 38, :column 7, :end-line 38, :end-column 18, :arglists (quote ([model id f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}}, :name frontend.core/update-todo, :variadic true, :file "src/frontend/core.cljs", :end-column 18, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model id f args)], :arglists ([model id f & args]), :arglists-meta (nil)}, :method-params [(model id f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 3, :fn-var true, :arglists ([model id f & args])}, view-header {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 182, :column 7, :end-line 182, :end-column 18, :arglists (quote ([field dispatch]))}, :name frontend.core/view-header, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([field dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 2, :fn-var true, :arglists (quote ([field dispatch]))}, wrap-persist-to-storage {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 268, :column 7, :end-line 268, :end-column 30, :arglists (quote ([reconcile storage]))}, :name frontend.core/wrap-persist-to-storage, :variadic false, :file "src/frontend/core.cljs", :end-column 30, :method-params ([reconcile storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 268, :end-line 268, :max-fixed-arity 2, :fn-var true, :arglists (quote ([reconcile storage]))}, view-todo-input {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 191, :column 7, :end-line 191, :end-column 22, :arglists (quote ([_id_ _title_ _editing?_ _dispatch_])), :doc "Note that |editing?| is passed only to trigger :component-did-update to set focus on the state change."}, :name frontend.core/view-todo-input, :variadic false, :file "src/frontend/core.cljs", :end-column 22, :method-params ([_id_ _title_ _editing?_ _dispatch_]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 191, :end-line 191, :max-fixed-arity 4, :fn-var true, :arglists (quote ([_id_ _title_ _editing?_ _dispatch_])), :doc "Note that |editing?| is passed only to trigger :component-did-update to set focus on the state change."}, init {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 23, :column 7, :end-line 23, :end-column 11, :arglists (quote ([]))}, :name frontend.core/init, :variadic false, :file "src/frontend/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 23, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, new-control {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 66, :column 7, :end-line 66, :end-column 18, :arglists (quote ([storage]))}, :name frontend.core/new-control, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([storage]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 66, :end-line 66, :max-fixed-arity 1, :fn-var true, :arglists (quote ([storage]))}, remove-todos {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 52, :column 7, :end-line 52, :end-column 19, :arglists (quote ([model pred]))}, :name frontend.core/remove-todos, :variadic false, :file "src/frontend/core.cljs", :end-column 19, :method-params ([model pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model pred]))}, update-todos* {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 32, :column 7, :end-line 32, :end-column 20, :arglists (quote ([model pred f & args])), :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}}, :name frontend.core/update-todos*, :variadic true, :file "src/frontend/core.cljs", :end-column 20, :top-fn {:variadic true, :max-fixed-arity 3, :method-params [(model pred f args)], :arglists ([model pred f & args]), :arglists-meta (nil)}, :method-params [(model pred f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 3, :fn-var true, :arglists ([model pred f & args])}, history {:name frontend.core/history, :file "src/frontend/core.cljs", :line 278, :column 1, :end-line 278, :end-column 17, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 278, :column 10, :end-line 278, :end-column 17}}, remove-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 56, :column 7, :end-line 56, :end-column 18, :arglists (quote ([model id]))}, :name frontend.core/remove-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([model id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model id]))}, init-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 15, :column 7, :end-line 15, :end-column 16, :arglists (quote ([id title]))}, :name frontend.core/init-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([id title]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id title]))}, find-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 46, :column 7, :end-line 46, :end-column 16, :arglists (quote ([model id]))}, :name frontend.core/find-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([model id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists (quote ([model id]))}, escape-key? {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 178, :column 7, :end-line 178, :end-column 18, :arglists (quote ([e]))}, :name frontend.core/escape-key?, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, view-footer {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 238, :column 7, :end-line 238, :end-column 18, :arglists (quote ([active-count has-completed-todos? visibility dispatch]))}, :name frontend.core/view-footer, :variadic false, :file "src/frontend/core.cljs", :end-column 18, :method-params ([active-count has-completed-todos? visibility dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 238, :end-line 238, :max-fixed-arity 4, :fn-var true, :arglists (quote ([active-count has-completed-todos? visibility dispatch]))}, app {:name frontend.core/app, :file "src/frontend/core.cljs", :line 312, :column 1, :end-line 312, :end-column 9, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 312, :column 6, :end-line 312, :end-column 9}}, view-todo {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 211, :column 7, :end-line 211, :end-column 16, :arglists (quote ([{:keys [id title editing? completed?], :as _todo_} dispatch]))}, :name frontend.core/view-todo, :variadic false, :file "src/frontend/core.cljs", :end-column 16, :method-params ([p__45218 dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 211, :end-line 211, :max-fixed-arity 2, :fn-var true, :arglists (quote ([{:keys [id title editing? completed?], :as _todo_} dispatch]))}, view-todo-list {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 225, :column 7, :end-line 225, :end-column 21, :arglists (quote ([todos all-completed? dispatch]))}, :name frontend.core/view-todo-list, :variadic false, :file "src/frontend/core.cljs", :end-column 21, :method-params ([todos all-completed? dispatch]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 225, :end-line 225, :max-fixed-arity 3, :fn-var true, :arglists (quote ([todos all-completed? dispatch]))}, view-model {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 155, :column 7, :end-line 155, :end-column 17, :arglists (quote ([model]))}, :name frontend.core/view-model, :variadic false, :file "src/frontend/core.cljs", :end-column 17, :method-params ([model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 1, :fn-var true, :arglists (quote ([model]))}, on-js-reload {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 315, :column 7, :end-line 315, :end-column 19, :arglists (quote ([]))}, :name frontend.core/on-js-reload, :variadic false, :file "src/frontend/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 315, :end-line 315, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-todos {:protocol-inline nil, :meta {:file "/Users/yuri/Dropbox/dev/cljs-elmish-todomvc/src/frontend/core.cljs", :line 42, :column 7, :end-line 42, :end-column 19, :arglists (quote ([model f & args])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}}, :name frontend.core/update-todos, :variadic true, :file "src/frontend/core.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(model f args)], :arglists ([model f & args]), :arglists-meta (nil)}, :method-params [(model f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 42, :end-line 42, :max-fixed-arity 2, :fn-var true, :arglists ([model f & args])}}, :require-macros {cljs.core.match cljs.core.match}, :cljs.analyzer/constants {:seen #{:on-connect :all-completed? :editing? :load :button.clear-completed :header.header :completed? :section.todoapp :remove :todos :section.main :toggle-all :key :placeholder :else :cancel-editing :next-id :set-visibility :strong :completed :li :input.edit :value :stop-editing :component-did-mount :input.toggle :on-toggle :span.todo-count :on-blur :component-did-update :field :type :input.new-todo :ul.filters :all :toggle :dispatch-signal :on-click :title :div.view :div :on-stop-editing :has-todos? :token :on-start-editing :input.toggle-all :clear-completed :has-completed-todos? :for :on-update-todo :on-update-field :update-field :reagent-render :original-title :active :on-double-click :label :id :class :checked :start-editing :on-add :on-toggle-all :button.destroy :on-cancel-editing :h1 :add :on-change :on-key-down :on-clear-completed :ul.todo-list :on-navigate :active-count :footer.footer :on-remove :visibility :href :a :update-todo :model}, :order [:id :title :completed? :original-title :editing? :field :visibility :todos :next-id :all :key :href :token :active :completed :else :on-clear-completed :clear-completed :on-remove :remove :on-update-todo :update-todo :on-cancel-editing :cancel-editing :on-stop-editing :stop-editing :on-start-editing :start-editing :on-toggle-all :toggle-all :on-toggle :toggle :on-add :add :on-update-field :update-field :on-navigate :set-visibility :on-connect :load :model :has-todos? :active-count :has-completed-todos? :all-completed? :header.header :h1 :input.new-todo :placeholder :value :on-change :on-key-down :reagent-render :component-did-update :component-did-mount :input.edit :on-blur :li :class :div.view :input.toggle :type :checked :label :on-double-click :button.destroy :on-click :section.main :input.toggle-all :for :ul.todo-list :footer.footer :span.todo-count :strong :ul.filters :a :button.clear-completed :section.todoapp :div :dispatch-signal]}, :doc nil}